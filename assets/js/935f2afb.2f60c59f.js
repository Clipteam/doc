"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"Introduction","href":"/","docId":"intro"},{"type":"link","label":"Community version","href":"/community","docId":"community"},{"type":"link","label":"Development","href":"/development","docId":"development"},{"type":"category","label":"Features","collapsed":true,"items":[{"type":"link","label":"Custom FPS","href":"/features/custom-fps","docId":"features/custom-fps"},{"type":"link","label":"Custom Reporter","href":"/features/custom-reporter","docId":"features/custom-reporter"},{"type":"link","label":"Extensions","href":"/features/extension","docId":"features/extension"},{"type":"link","label":"Global Functions","href":"/features/global-functions","docId":"features/global-functions"},{"type":"link","label":"High-Quality Pen","href":"/features/hqpen","docId":"features/hqpen"},{"type":"link","label":"Compiler","href":"/features/compiler","docId":"features/compiler"},{"type":"link","label":"Dark mode","href":"/features/dark-mode","docId":"features/dark-mode"},{"type":"link","label":"Print text","href":"/features/print-text","docId":"features/print-text"}],"collapsible":true,"href":"/category/features"},{"type":"category","label":"For Developers","collapsed":true,"items":[{"type":"link","label":"Get started","href":"/developer/get-started","docId":"developer/get-started"},{"type":"link","label":"Basic tutorial","href":"/developer/basic","docId":"developer/basic"},{"type":"link","label":"Structure","href":"/developer/structure","docId":"developer/structure"},{"type":"link","label":"Load","href":"/developer/load","docId":"developer/load"},{"type":"link","label":"Add a block","href":"/developer/block","docId":"developer/block"},{"type":"link","label":"Advanced Blocks API Usage","href":"/developer/advanced-block-usage","docId":"developer/advanced-block-usage"},{"type":"link","label":"Localization","href":"/developer/i18n","docId":"developer/i18n"},{"type":"link","label":"Interacting with editor","href":"/developer/interacting-with-editor","docId":"developer/interacting-with-editor"},{"type":"link","label":"Interacting with extension","href":"/developer/interacting-with-extension","docId":"developer/interacting-with-extension"},{"type":"link","label":"Settings","href":"/developer/settings","docId":"developer/settings"},{"type":"link","label":"Compiler Optimization","href":"/developer/compiler-optimize","docId":"developer/compiler-optimize"}],"collapsible":true,"href":"/category/for-developers"}],"api":[{"type":"link","label":"type","href":"/api/type","docId":"api/type"}]},"docs":{"api/type":{"id":"api/type","title":"type","description":"","sidebar":"api"},"community":{"id":"community","title":"Community version","description":"Clip Community is a Online programming platform that uses ClipCC as default editor. There are many differences between the community version of ClipCC and the standalone version.","sidebar":"docs"},"developer/advanced-block-usage":{"id":"developer/advanced-block-usage","title":"Advanced Blocks API Usage","description":"Add/remove blocks in one times.","sidebar":"docs"},"developer/basic":{"id":"developer/basic","title":"Basic tutorial","description":"This tutorial will illustrate the basic process of writing ClipCC extensions by demonstrating the writing of a simple extension.","sidebar":"docs"},"developer/block":{"id":"developer/block","title":"Add a block","description":"This page describes how to add a block to the editor.","sidebar":"docs"},"developer/compiler-optimize":{"id":"developer/compiler-optimize","title":"Compiler Optimization","description":"The following extension APIs are in draft and the following are subject to change in the future.","sidebar":"docs"},"developer/get-started":{"id":"developer/get-started","title":"Get started","description":"This page is for the developers that want to learn how to make an extension. Before you start, please ensure that you have the basic knowledge of Javascript programming.","sidebar":"docs"},"developer/i18n":{"id":"developer/i18n","title":"Localization","description":"Translatation file","sidebar":"docs"},"developer/interacting-with-editor":{"id":"developer/interacting-with-editor","title":"Interacting with editor","description":"You can interact with the editor by using the `api.getXXXInstance()`","sidebar":"docs"},"developer/interacting-with-extension":{"id":"developer/interacting-with-extension","title":"Interacting with extension","description":"Interaction between extensions is achieved by exposing a function, where a member function of the extension prototype is exposed using the `registerGlobalFunction function, allowing other extensions to call it via the callGlobalFunction` function. Note that getting an instance of an extension directly in another extension is also not prohibited, but results in undefined behavior.","sidebar":"docs"},"developer/load":{"id":"developer/load","title":"Load","description":"Dependencies","sidebar":"docs"},"developer/settings":{"id":"developer/settings","title":"Settings","description":"Settings are defined in the `settings.json` file in the internal root of the extension file and are used to add settings to the editor. All settings of the extension are added to the editor when the extension is loaded, not when it is enabled. That is, the user can modify the extension\'s settings while the extension is not enabled.","sidebar":"docs"},"developer/structure":{"id":"developer/structure","title":"Structure","description":"In the previous page, We demonstrate how to create an extension. Now, we\'re going to demonstrate exactly how the extension works.","sidebar":"docs"},"development":{"id":"development","title":"Development","description":"Please note! Please make sure you have installed Git and Node.js before building. What\'s more, We recommend that you use Linux rather than Windows for configuration","sidebar":"docs"},"extensions/empty":{"id":"extensions/empty","title":"empty","description":""},"features/compiler":{"id":"features/compiler","title":"Compiler","description":"This feature is still under development and we do not guarantee the stability of this feature.","sidebar":"docs"},"features/custom-fps":{"id":"features/custom-fps","title":"Custom FPS","description":"This feature can provide a smoother display experience for animation and game projects.","sidebar":"docs"},"features/custom-reporter":{"id":"features/custom-reporter","title":"Custom Reporter","description":"This feature is suitable for projects that require a lot of recursive operations or need to compress program content. you can eliminate unnecessary variables and blocks by customizing a reporter.","sidebar":"docs"},"features/dark-mode":{"id":"features/dark-mode","title":"Dark mode","description":"Dark Mode is a \u201cdramatic\u201d new look that helps you focus on creating in the dark, creating a distraction-free atmosphere.","sidebar":"docs"},"features/extension":{"id":"features/extension","title":"Extensions","description":"You can load scratch extensions in ClipCC. What\'s more, ClipCC also introduces a new, more powerful extension system than the original Scratch. It allows extensions to add/modify ClipCC directly with node modules. We hope it will better help you with the creation of your project.","sidebar":"docs"},"features/global-functions":{"id":"features/global-functions","title":"Global Functions","description":"This feature allows you to call an function (or \\"custom block\\") everywhere.","sidebar":"docs"},"features/hqpen":{"id":"features/hqpen","title":"High-Quality Pen","description":"This feature is still under development and we do not guarantee the stability of this feature.","sidebar":"docs"},"features/print-text":{"id":"features/print-text","title":"Print text","description":"ClipCC offers text printing blocks that can quickly modify print color/size/font and print it on the stage.","sidebar":"docs"},"intro":{"id":"intro","title":"Introduction","description":"ClipCC is a scratch mod that supports custom reporters, third-party extensions, dark mode and more. This is a documentation page for the ClipCC project, which introduces the features and usage of ClipCC.","sidebar":"docs"}}}')}}]);