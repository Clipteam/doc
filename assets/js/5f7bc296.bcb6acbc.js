"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[840],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=l(t),f=o,y=m["".concat(c,".").concat(f)]||m[f]||u[f]||i;return t?r.createElement(y,a(a({ref:n},s),{},{components:t})):r.createElement(y,a({ref:n},s))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p.mdxType="string"==typeof e?e:o,a[1]=p;for(var l=2;l<i;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5019:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return u}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],p={title:"type"},c=void 0,l={unversionedId:"api/type",id:"api/type",title:"type",description:"",source:"@site/docs/api/type.md",sourceDirName:"api",slug:"/api/type",permalink:"/api/type",editUrl:"https://github.com/Clipteam/doc/edit/master/docs/api/type.md",tags:[],version:"current",lastUpdatedBy:"Alex Cui",lastUpdatedAt:1651468367,formattedLastUpdatedAt:"5/2/2022",frontMatter:{title:"type"},sidebar:"api"},s={},u=[],m={toc:u};function f(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"namespace type {\n    enum BlockType {\n        COMMAND = 1,\n        REPORTER = 2,\n        BOOLEAN = 3,\n        BRANCH = 4,\n        HAT = 5\n    }\n\n    enum ParameterType {\n        NUMBER = 1,\n        STRING = 2,\n        BOOLEAN = 3,\n        COLOR = 5,\n        MATRIX = 6,\n        NOTE = 7,\n        ANGLE = 8,\n        IMAGE = 99\n    }\n\n    enum ShadowType {\n        NO_SHADOW = false,\n        ANGLE =  { type: 'math_angle', fieldName: 'NUM' },\n        COLOR = { type: 'colour_picker', fieldName: 'COLOUR' },\n        NUMBER = { type: 'math_number', fieldName: 'NUM' },\n        STRING = { type: 'text', fieldName: 'TEXT' },\n        MATRIX = { type: 'matrix', fieldName: 'MATRIX' },\n        NOTE = { type: 'note', fieldName: 'NOTE' }\n    }\n\n    interface ExtensionInfo {\n        id: string;\n        version: string;\n        author: string | string[];\n        icon: string;\n        inset_icon: string;\n        api: number;\n        optional?: boolean;\n        dependency: { [key: string]: string };\n    }\n\n    interface SettingsItemBoolean {\n        id: string;\n        type: \"boolean\";\n        default: boolean;\n    }\n\n    interface SettingsItemNumber {\n        id: string;\n        type: \"number\";\n        default: number;\n        max?: number;\n        min?: number;\n        precision?: number;\n    }\n\n    interface SettingsItemSelector {\n        id: string;\n        type: \"selector\";\n        default: string;\n        items: string[];\n    }\n\n    type SettingsItem = SettingsItemBoolean | SettingsItemNumber | SettingsItemSelector;\n\n    interface BlockPrototype {\n        opcode: string;\n        type: BlockType;\n        option?: BlockOption;\n        param?: { [key: string]: ParameterPrototype };\n        messageId: string;\n        categoryId: string;\n        function: Function;\n    }\n\n    interface BlockOption {\n        terminal?: boolean;\n        monitor?: boolean;\n    }\n\n    interface ParameterPrototype {\n        type: ParameterType;\n        default?: any;\n        menu?: MenuItemPrototype[];\n        field?: boolean;\n        shadow?: ShadowPrototype;\n    }\n\n    interface MenuItemPrototype {\n        messageId: string;\n        value: any;\n    }\n\n    interface ShadowPrototype {\n        type: string;\n        fieldName: string;\n    }\n\n    interface CategoryPrototype {\n        categoryId: string;\n        messageId: string;\n        color: string;\n    }\n}\n")))}f.isMDXComponent=!0}}]);